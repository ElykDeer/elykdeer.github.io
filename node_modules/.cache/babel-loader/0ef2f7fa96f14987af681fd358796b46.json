{"ast":null,"code":"var _jsxFileName = \"/home/kyle/elyk.dev/src/App.js\";\nimport React, { Component } from 'react';\nimport { Grommet, Stack, Text, Box, Button } from 'grommet';\nimport { Github, Twitter, MailOption } from 'grommet-icons';\nimport Terminal from 'react-console-emulator';\nconst commands = {\n  echo: {\n    description: 'Echo a passed string.',\n    usage: 'echo <string>',\n    fn: function () {\n      return `${Array.from(arguments).join(' ')}`;\n    }\n  }\n};\nexport default class App extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Grommet, {\n      themeMode: \"dark\",\n      full: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Stack, {\n      anchor: \"center\",\n      fill: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Terminal, {\n      contentStyle: {\n        'overflow-x': 'hidden',\n        'word-wrap': 'break-word'\n      },\n      style: {\n        minHeight: '100%',\n        minWidth: '100%',\n        borderRadius: '0'\n      },\n      commands: commands,\n      promptLabel: '> ',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      border: {\n        color: 'brand',\n        size: 'large',\n        style: 'double',\n        side: 'horizontal'\n      },\n      pad: \"medium\",\n      alignContent: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: \"xxlarge\",\n      color: \"darkgrey\",\n      textAlign: \"center\",\n      margin: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, \"Kyle Martin Computer Engineer\"), /*#__PURE__*/React.createElement(Box, {\n      alignSelf: \"center\",\n      direction: \"row\",\n      gap: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      icon: /*#__PURE__*/React.createElement(Github, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }\n      }),\n      href: \"https://github.com/KyleMiles\",\n      plain: true,\n      focusIndicator: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      icon: /*#__PURE__*/React.createElement(Twitter, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }\n      }),\n      href: \"https://twitter.com/elykdeer\",\n      plain: true,\n      focusIndicator: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      icon: /*#__PURE__*/React.createElement(MailOption, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }\n      }),\n      href: \"mailto:martinrkyle@gmail.com\",\n      plain: true,\n      focusIndicator: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/home/kyle/elyk.dev/src/App.js"],"names":["React","Component","Grommet","Stack","Text","Box","Button","Github","Twitter","MailOption","Terminal","commands","echo","description","usage","fn","Array","from","arguments","join","App","render","minHeight","minWidth","borderRadius","color","size","style","side"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Grommet, Stack, Text, Box, Button } from 'grommet';\nimport { Github, Twitter, MailOption } from 'grommet-icons';\nimport Terminal from 'react-console-emulator'\n\nconst commands = {\n  echo: {\n    description: 'Echo a passed string.',\n    usage: 'echo <string>',\n    fn: function ()\n    {\n      return `${Array.from(arguments).join(' ')}`\n    }\n  }\n}\n\nexport default class App extends Component\n{\n  render ()\n  {\n    return (\n      <Grommet themeMode=\"dark\" full>\n        <Stack anchor=\"center\" fill>\n          <Terminal\n            contentStyle={{ 'overflow-x': 'hidden', 'word-wrap': 'break-word' }}\n            style={{ minHeight: '100%', minWidth: '100%', borderRadius: '0' }}\n            commands={commands}\n            promptLabel={'> '}\n          />\n          <Box border={{ color: 'brand', size: 'large', style: 'double', side: 'horizontal' }} pad=\"medium\" alignContent='center'>\n            <Text size='xxlarge' color='darkgrey' textAlign='center' margin='small'>\n              Kyle Martin\n\n              Computer Engineer\n            </Text>\n            <Box alignSelf='center' direction='row' gap='medium'>\n              <Button icon={<Github size='large' />} href='https://github.com/KyleMiles' plain={true} focusIndicator={false} />\n              <Button icon={<Twitter size='large' />} href='https://twitter.com/elykdeer' plain={true} focusIndicator={false} />\n              <Button icon={<MailOption size='large' />} href='mailto:martinrkyle@gmail.com' plain={true} focusIndicator={false} />\n            </Box>\n          </Box>\n        </Stack>\n\n      </Grommet >\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}